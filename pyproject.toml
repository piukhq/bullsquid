[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "bullsquid"
version = "0.0.0"
description = "Portal API backend project."
license = "MIT"
authors = ["Chris Latham <cl@bink.com>"]
readme = "README.md"
repository = "https://github.com/binkhq/bullsquid"

[tool.poetry.scripts]
bullsquid-kubefest = "bullsquid.cmd.kubefest:main"
bullsquid-worker = "bullsquid.cmd.worker:main"

[tool.poetry.dependencies]
python = "^3.10"
piccolo = { extras = ["orjson", "postgres"], version = "==0.74.4" }
fastapi = "^0.85.2"
loguru = "^0.6.0"
sentry-sdk = "^1.10.1"
uvicorn = "^0.19.0"
qbert = "^0.1.7"
aiohttp = "^3.8.3"
url-normalize = "^1.4.3"
aiodns = "^3.0.0"
inflection = "^0.5.1"
PyJWT = { extras = ["crypto"], version = "^2.5.0" }
PyYAML = "^6.0"
docopt-ng = "^0.8.1"
tomli = "^2.0.1"
pyjwt = {extras = ["crypto"], version = "^2.6.0"}
pyyaml = "^6.0"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
pylint = "^2.15.5"
mypy = "==0.981"
isort = "^5.10.1"
ipython = "^8.6.0"
watchgod = "^0.8.2"
aioresponses = "^0.7.3"
requests = "^2.28.1"
types-PyYAML = "^6.0.12"
types-requests = "^2.28.11.2"
refurb = "^1.4.0"
pytest = "^7.2.0"
pytest-asyncio = "^0.20.1"
pytest-cov = "^4.0.0"
pytest-icdiff = "^0.6"
types-pyyaml = "^6.0.12.1"

[tool.poetry-dynamic-versioning]
enable = true

[tool.isort]
profile = "black"

[tool.mypy]
exclude = "piccolo_migrations"
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true

[tool.pylint.messages_control]
ignore = "piccolo_migrations"
extension-pkg-whitelist = "pydantic"
disable = [
    "redefined-outer-name",
    "too-few-public-methods",
    "fixme",
    "useless-import-alias",   # directly conflicts with pyright's re-exports preference.
    "duplicate-code",         # TODO: some of our code is highly similar, would be nice to fix
]
good-names = [
    "pk", # primary key
    "ex", # exception
    "v",  # pydantic validator value field
    "n",  # pagination limit
    "p",  # pagination page
]

[tool.pyright]
venvPath = "."
venv = ".venv"
reportGeneralTypeIssues = false
reportPrivateImportUsage = false

[tool.coverage.run]
omit = [
    "tests/*",
    "*/piccolo_migrations/*", # migrations aren't run in tests currently
    "*/piccolo_app.py",       # just piccolo ORM configuration, nothing to test
    "*/tables.py",            # table definitions are not directly tested
    "bullsquid/settings.py",  # not much use testing settings at this stage
    "bullsquid/log_conf.py",  # log_conf sets up a complex log intercept that is hard to test
    "bullsquid/api/app.py",   # api app initialisation sets up db pools and so on that are hard to test
    "bullsquid/api/auth.py",  # TEMPORARY: will probably need a lot of mocking
    "bullsquid/cmd/*.py",     # TEMPORARY: command line tools are not tested right now
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
